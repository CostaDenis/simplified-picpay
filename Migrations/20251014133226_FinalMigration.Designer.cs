// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using simplified_picpay.Data;

#nullable disable

namespace simplified_picpay.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251014133226_FinalMigration")]
    partial class FinalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("simplified_picpay.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar")
                        .HasColumnName("account_type");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("current_balance");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("display_name");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar")
                        .HasColumnName("document");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("full_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar")
                        .HasColumnName("password_hash");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar")
                        .HasColumnName("public_id");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique()
                        .HasDatabaseName("ux_accounts_display_name");

                    b.HasIndex("Document")
                        .IsUnique()
                        .HasDatabaseName("ux_accounts_document");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ux_accounts_email");

                    b.HasIndex("PublicId")
                        .IsUnique()
                        .HasDatabaseName("ux_accounts_public_id");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("simplified_picpay.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("PayeeId")
                        .HasColumnType("uuid")
                        .HasColumnName("payee_id");

                    b.Property<string>("PayeePublicId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar")
                        .HasColumnName("payee_public_id");

                    b.Property<Guid>("PayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("payer_id");

                    b.Property<string>("PayerPublicId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar")
                        .HasColumnName("payer_public_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("PayeeId");

                    b.HasIndex("PayerId");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("simplified_picpay.Models.Transaction", b =>
                {
                    b.HasOne("simplified_picpay.Models.Account", "Payee")
                        .WithMany("Receipts")
                        .HasForeignKey("PayeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_payee_id");

                    b.HasOne("simplified_picpay.Models.Account", "Payer")
                        .WithMany("Payments")
                        .HasForeignKey("PayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_payer_id");

                    b.Navigation("Payee");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("simplified_picpay.Models.Account", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Receipts");
                });
#pragma warning restore 612, 618
        }
    }
}
